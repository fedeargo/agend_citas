steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "us-east1" > region.txt
        echo "test-bolivar-agendamiento" > repo_artifact.txt
        echo "test-bolivar-agendamiento" > image_repo.txt
        echo "test-bolivar-agendamiento" > service_name.txt
        echo "$(cat region.txt)-docker.pkg.dev/$PROJECT_ID/$(cat repo_artifact.txt)/$(cat image_repo.txt):latest" > image_name.txt

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if gcloud artifacts repositories describe "$(cat repo_artifact.txt)" --location="$(cat region.txt)" >/dev/null 2>&1; then
          echo "Repositorio ya existe, no se hace nada."
        else
          echo "Creando repositorio..."
          gcloud artifacts repositories create "$(cat repo_artifact.txt)" --location "$(cat region.txt)" --description "Repo de backend para la IA de agendamiento de citas" --repository-format="DOCKER"
        fi

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t "$(cat image_name.txt)" --network=cloudbuild . 
        docker push "$(cat image_name.txt)"

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy "$(cat service_name.txt)" \
          --image "$(cat image_name.txt)" \
          --region "$(cat region.txt)" \
          --platform managed \
          --allow-unauthenticated

options:
  logging: CLOUD_LOGGING_ONLY
